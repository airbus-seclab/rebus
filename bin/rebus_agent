#! /usr/bin/env python

import pkgutil
import rebus.agents
import rebus.buses
from rebus.agent import AgentRegistry
from rebus.bus import BusRegistry,DEFAULT_DOMAIN
import logging

def main():
    import sys
    import argparse

    rebus.agents.import_all()
    rebus.buses.import_all()    
    buslist = BusRegistry.get_all()

    # pre-parser to preload modules before real argument parser
    parser = argparse.ArgumentParser(add_help=False)
    parser.add_argument("--module", "-m", action="append", default=[])
    modoptions, other = parser.parse_known_args()
    for m in modoptions.module:
        imp = pkgutil.get_loader(m)
        if not imp:
            parser.error("Could not find module [%s]" % m)
        mod = imp.load_module(m)
        if hasattr(mod, "import_all"):
            mod.import_all()

    # main options
    parser = argparse.ArgumentParser()
    parser.add_argument("--bus", choices=buslist.keys(), default="localbus",
                        help="choose bus")
    parser.add_argument("--busaddr",  help="Address of the bus")
    parser.add_argument("--list-agents", action="store_true",
                        help="list available agents")
    parser.add_argument("--domain", "-d", default=DEFAULT_DOMAIN,
                        help="Work in DOMAIN")
    parser.add_argument("--verbose", "-v", action="count", default=0,
                        help="Increase verbosity")
    parser.add_argument("--module", "-m", action="append", default=[])
    
    # subparser options
    agent_parser = parser.add_subparsers(dest="agent_name", help="Agents")
    for agent in AgentRegistry.itervalues():
        p = agent_parser.add_parser(agent._name_, help=agent._desc_)
        agent.add_arguments(p)

    remain = sys.argv[1:]
    remain.append("--")
    options = argparse.Namespace(agents=[])
    while remain:
        i = remain.index("--")
        remain,r2 = remain[:i],remain[i:]
        options,remain = parser.parse_known_args(remain, namespace=options)
        remain = remain+r2 if remain else r2[1:]
        if options.agent_name:
            options.agents.append(options.agent_name)
            options.agent_name = None

    logging.basicConfig(level=max(1,30-10*options.verbose))

    if options.list_agents:
        for agent in AgentRegistry.itervalues():
            print "{0._name_<12}: {0._desc}".format(agent)
    else:
        bus_class = BusRegistry.get(options.bus)
        bus = bus_class(busaddr=options.busaddr)
        for agent_name in options.agents:
            agent_class = AgentRegistry.get(agent_name)
            agent = agent_class(bus=bus, domain=options.domain)
            agent.run_in_bus((options,))
        bus.busloop()
    
if __name__ == "__main__":
    main()
