#! /usr/bin/env python

import rebus.agents
import rebus.buses
from rebus.agent import AgentRegistry
from rebus.bus import BusRegistry,DEFAULT_DOMAIN
import logging

def main():
    import argparse

    rebus.agents.import_all()
    rebus.buses.import_all()    
    buslist = BusRegistry.get_all()

    # main options
    parser = argparse.ArgumentParser()
    parser.add_argument("--bus", choices=buslist.keys(), default="localbus",
                        help="choose bus")
    parser.add_argument("--busaddr",  help="Address of the bus")
    parser.add_argument("--list-agents", action="store_true",
                        help="list available agents")
    parser.add_argument("--domain", "-d", default=DEFAULT_DOMAIN,
                        help="Work in DOMAIN")
    parser.add_argument("--verbose", "-v", action="count", default=0,
                        help="Increase verbosity")
    
    # subparser options
    agent_parser = parser.add_subparsers(dest="agent_name", help="Agents")
    for agent in AgentRegistry.itervalues():
        p = agent_parser.add_parser(agent._name_, help=agent._desc_)
        agent.add_arguments(p)

    options = parser.parse_args()

    logging.basicConfig(level=max(1,30-10*options.verbose))

    if options.list_agents:
        for agent in AgentRegistry.itervalues():
            print "{0._name_<12}: {0._desc}".format(agent)
    else:
        bus_class = BusRegistry.get(options.bus)
        bus = bus_class(busaddr=options.busaddr)
        agent_class = AgentRegistry.get(options.agent_name)
        agent = agent_class(bus=bus, domain=options.domain)
        agent.run(options)
    
if __name__ == "__main__":
    main()
